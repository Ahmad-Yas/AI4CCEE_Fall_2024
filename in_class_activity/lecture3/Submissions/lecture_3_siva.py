# -*- coding: utf-8 -*-
"""Lecture_3-Siva.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zb_siVUg2FV1ebhw0KnHybrXUxBpINQB
"""

# Commented out IPython magic to ensure Python compatibility.
!mkdir act_2
# %cd act_2



name = "Siva"
age = 29
print(f"Hello my name is {name} and age is {age} years old")

sentence = "Hello my name is SIVA and age is 29 years old"

print(sentence.upper())
print(sentence.lower())

age = 29
hobby = "reading books"

print(f"I am {age} years old and I love {hobby}")

asphalt_unit_cost = 50
asphalt_quantity = 100

concrete_unit_cost = 75
concrete_quantity = 200

labor_unit_cost = 20
labor_hours = 40

# Calculate total costs
total_asphalt_cost = asphalt_unit_cost * asphalt_quantity
total_concrete_cost = concrete_unit_cost * concrete_quantity
total_labor_cost = labor_unit_cost * labor_hours

# Display the results
print("Total Asphalt Cost: ", total_asphalt_cost)
print("Total Concrete Cost: ", total_concrete_cost)
print("Total Labor Cost: ", total_labor_cost)

# Asphalt costs and quantities
asphalt_unit_cost = float(input("Enter the unit cost of asphalt (in usd): "))
asphalt_quantity = float(input("Enter the quantity of asphalt used (in units): "))

# Concrete costs and quantities
concrete_unit_cost = float(input("Enter the unit cost of concrete (in usd): "))
concrete_quantity = float(input("Enter the quantity of concrete used (in units): "))

# Labor costs and hours
labor_unit_cost = float(input("Enter the labor cost per hour (in usd): "))
labor_hours = float(input("Enter the total labor hours worked: "))

# Calculate total costs
total_asphalt_cost = asphalt_unit_cost * asphalt_quantity
total_concrete_cost = concrete_unit_cost * concrete_quantity
total_labor_cost = labor_unit_cost * labor_hours

# Display the results
print("\n--- Total Costs ---")
print(f"Total Asphalt Cost: {total_asphalt_cost}")
print(f"Total Concrete Cost: {total_concrete_cost}")
print(f"Total Labor Cost: {total_labor_cost}")

# Asphalt costs and quantities
asphalt_unit_cost = float(input("Enter the unit cost of asphalt (in USD): "))
asphalt_quantity = float(input("Enter the quantity of asphalt used (in units): "))

# Concrete costs and quantities
concrete_unit_cost = float(input("Enter the unit cost of concrete (in USD): "))
concrete_quantity = float(input("Enter the quantity of concrete used (in units): "))

# Labor costs and hours
labor_unit_cost = float(input("Enter the labor cost per hour (in USD): "))
labor_hours = float(input("Enter the total labor hours worked: "))

# Calculate total costs
total_asphalt_cost = asphalt_unit_cost * asphalt_quantity
total_concrete_cost = concrete_unit_cost * concrete_quantity
total_labor_cost = labor_unit_cost * labor_hours

# Calculate total project cost
total_project_cost = total_asphalt_cost + total_concrete_cost + total_labor_cost

# Define the specified budget
budget = 50000.0  # Budget in usd

# Display the results
print("\n--- Total Costs of the Project ---")
print(f"Total Asphalt Cost: {total_asphalt_cost}")
print(f"Total Concrete Cost: {total_concrete_cost}")
print(f"Total Labor Cost: {total_labor_cost}")
print(f"Total Project Cost: {total_project_cost}")

# Compare the total project cost to the budget
if total_project_cost < budget:
    print("The project is under budget.")

elif total_project_cost == budget:
    print("The Project is in budget.")

else:
    print("The project is over budget.")

# prompt: df = pd.read_csv('/content/act_2/example.csv')

import pandas as pd

df = pd.read_csv('/content/act_2/example.csv')


print(df.head())

print(df.describe())

ages = df['Age']

subset = df[['Name', 'City']]

young_people = df[df['Age'] < 30]

import pandas as pd

df = pd.read_csv('/content/act_2/235-Nov.csv')

print(df.head())

print("\n--- Data Types of Each Column ---")
print(df.dtypes)

print("\n--- Missing Values in Each Column ---")
print(df.isnull().sum())

print("\n--- Summary of the Dataset ---")

print(df.describe())

df = pd.DataFrame({
    'time': ['12:34:56', '09:15:30', '23:59:59', '00:30:15']  # Example: HH:MM:SS format as strings
})

# Convert the 'time' column to datetime and then calculate the total hours
df['time'] = pd.to_datetime(df['time'], format='HH:MM:SS')

# Extract hours by converting timedelta to float hours
df['hours'] = df['time'].dt.hour + df['time'].dt.minute / 60 + df['time'].dt.second / 3600

# Display the updated DataFrame
print(df)